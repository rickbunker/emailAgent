{
  "errors": [],
  "generated_at": "2025-06-14T03:01:39Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 19,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 2,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 20,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 15188,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 122,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/agents/asset_document_agent.py": {
      "CONFIDENCE.HIGH": 5,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 5,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1822,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/agents/contact_extractor.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 851,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/agents/email_agent.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 6,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/agents/spam_detector.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 934,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/agents/supervisor.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 925,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/email_interface/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 132,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/email_interface/base.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 630,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/email_interface/factory.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 453,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/email_interface/gmail.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 681,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/email_interface/msgraph.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 970,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/memory/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 313,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/memory/base.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 547,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/memory/contact.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 857,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/memory/episodic.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 584,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/memory/procedural.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 616,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/memory/semantic.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 569,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/tools/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 345,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/tools/spamassassin_integration.py": {
      "CONFIDENCE.HIGH": 9,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 9,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 703,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 256,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/config.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 201,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/logging_system.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 277,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/web_ui/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/web_ui/app.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1997,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/web_ui/human_review.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 384,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "63 import shutil\n64 import subprocess\n65 \n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "src/agents/asset_document_agent.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 64,
      "line_range": [
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "423             which_cmd = \"where\" if os.name == \"nt\" else \"which\"\n424             result = subprocess.run(\n425                 [which_cmd, \"clamscan\"], capture_output=True, text=True, timeout=5\n426             )\n427             if result.returncode == 0 and result.stdout.strip():\n",
      "col_offset": 21,
      "end_col_offset": 13,
      "filename": "src/agents/asset_document_agent.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 424,
      "line_range": [
        424,
        425,
        426
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "476             # Test clamscan with version check\n477             result = subprocess.run(\n478                 [self.clamscan_path, \"--version\"],\n479                 capture_output=True,\n480                 text=True,\n481                 timeout=10,\n482             )\n483 \n",
      "col_offset": 21,
      "end_col_offset": 13,
      "filename": "src/agents/asset_document_agent.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 477,
      "line_range": [
        477,
        478,
        479,
        480,
        481,
        482
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "662                 Path(temp_path).unlink()\n663             except Exception:\n664                 pass\n665 \n",
      "col_offset": 12,
      "end_col_offset": 20,
      "filename": "src/agents/asset_document_agent.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 663,
      "line_range": [
        663,
        664
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "795             health[\"base_path_writable\"] = True\n796         except Exception:\n797             pass\n798 \n",
      "col_offset": 8,
      "end_col_offset": 16,
      "filename": "src/agents/asset_document_agent.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 796,
      "line_range": [
        796,
        797
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1042                             stats[\"recent_extractions\"] += 1\n1043                     except:\n1044                         pass\n1045 \n",
      "col_offset": 20,
      "end_col_offset": 28,
      "filename": "src/agents/contact_extractor.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1043,
      "line_range": [
        1043,
        1044
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "547                                     recent_spam = True\n548                             except:\n549                                 pass\n550 \n",
      "col_offset": 28,
      "end_col_offset": 36,
      "filename": "src/agents/spam_detector.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 548,
      "line_range": [
        548,
        549
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "760                 sent_date = email.utils.parsedate_to_datetime(headers[\"date\"])\n761             except:\n762                 pass\n763 \n",
      "col_offset": 12,
      "end_col_offset": 20,
      "filename": "src/email_interface/gmail.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 761,
      "line_range": [
        761,
        762
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1210                         attachment.content = base64.b64decode(att[\"contentBytes\"])\n1211                     except:\n1212                         pass\n1213 \n",
      "col_offset": 20,
      "end_col_offset": 28,
      "filename": "src/email_interface/msgraph.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 1211,
      "line_range": [
        1211,
        1212
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "1045 \n1046         assert contact1_id == duplicate_id, \"Deduplication failed\"\n1047         logger.info(\"\u2713 Contact deduplication working correctly\")\n",
      "col_offset": 8,
      "end_col_offset": 66,
      "filename": "src/memory/contact.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1046,
      "line_range": [
        1046
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "40 import shutil\n41 import subprocess\n42 \n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "208             try:\n209                 result = subprocess.run(\n210                     [\"spamassassin\", \"--version\"],\n211                     capture_output=True,\n212                     text=True,\n213                     timeout=10,\n214                 )\n215                 if result.returncode == 0:\n",
      "col_offset": 25,
      "end_col_offset": 17,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 209,
      "line_range": [
        209,
        210,
        211,
        212,
        213,
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "208             try:\n209                 result = subprocess.run(\n210                     [\"spamassassin\", \"--version\"],\n211                     capture_output=True,\n212                     text=True,\n213                     timeout=10,\n214                 )\n215                 if result.returncode == 0:\n",
      "col_offset": 25,
      "end_col_offset": 17,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 209,
      "line_range": [
        209,
        210,
        211,
        212,
        213,
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "235             try:\n236                 result = subprocess.run(\n237                     [\"spamc\", \"--version\"], capture_output=True, text=True, timeout=5\n238                 )\n239                 if result.returncode == 0:\n",
      "col_offset": 25,
      "end_col_offset": 17,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 236,
      "line_range": [
        236,
        237,
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "235             try:\n236                 result = subprocess.run(\n237                     [\"spamc\", \"--version\"], capture_output=True, text=True, timeout=5\n238                 )\n239                 if result.returncode == 0:\n",
      "col_offset": 25,
      "end_col_offset": 17,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 236,
      "line_range": [
        236,
        237,
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "388             # Use complete spamassassin flags for detailed analysis\n389             process = subprocess.Popen(\n390                 [\"spamassassin\", \"-D\", \"-t\", \"--cf\", \"report_safe 0\"],\n391                 stdin=subprocess.PIPE,\n392                 stdout=subprocess.PIPE,\n393                 stderr=subprocess.PIPE,\n394                 text=True,\n395             )\n396 \n",
      "col_offset": 22,
      "end_col_offset": 13,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 389,
      "line_range": [
        389,
        390,
        391,
        392,
        393,
        394,
        395
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "388             # Use complete spamassassin flags for detailed analysis\n389             process = subprocess.Popen(\n390                 [\"spamassassin\", \"-D\", \"-t\", \"--cf\", \"report_safe 0\"],\n391                 stdin=subprocess.PIPE,\n392                 stdout=subprocess.PIPE,\n393                 stderr=subprocess.PIPE,\n394                 text=True,\n395             )\n396 \n",
      "col_offset": 22,
      "end_col_offset": 13,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 389,
      "line_range": [
        389,
        390,
        391,
        392,
        393,
        394,
        395
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "435             # Use spamc with report flag for detailed output\n436             process = subprocess.Popen(\n437                 [\"spamc\", \"-R\"],  # -R flag for full report\n438                 stdin=subprocess.PIPE,\n439                 stdout=subprocess.PIPE,\n440                 stderr=subprocess.PIPE,\n441                 text=True,\n442             )\n443 \n",
      "col_offset": 22,
      "end_col_offset": 13,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 436,
      "line_range": [
        436,
        437,
        438,
        439,
        440,
        441,
        442
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "435             # Use spamc with report flag for detailed output\n436             process = subprocess.Popen(\n437                 [\"spamc\", \"-R\"],  # -R flag for full report\n438                 stdin=subprocess.PIPE,\n439                 stdout=subprocess.PIPE,\n440                 stderr=subprocess.PIPE,\n441                 text=True,\n442             )\n443 \n",
      "col_offset": 22,
      "end_col_offset": 13,
      "filename": "src/tools/spamassassin_integration.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 436,
      "line_range": [
        436,
        437,
        438,
        439,
        440,
        441,
        442
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "140             ),\n141             flask_host=os.getenv(\"FLASK_HOST\", \"0.0.0.0\"),\n142             flask_port=int(os.getenv(\"FLASK_PORT\", \"5001\")),\n",
      "col_offset": 47,
      "end_col_offset": 56,
      "filename": "src/utils/config.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 605,
        "link": "https://cwe.mitre.org/data/definitions/605.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible binding to all interfaces.",
      "line_number": 141,
      "line_range": [
        141
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b104_hardcoded_bind_all_interfaces.html",
      "test_id": "B104",
      "test_name": "hardcoded_bind_all_interfaces"
    },
    {
      "code": "375     @log_function()\n376     def test_function(name: str, value: int = 42, password: str = \"secret123\"):\n377         \"\"\"Test function for logging demonstration.\"\"\"\n378         test_logger.info(f\"Processing {name} with value {value}\")\n379         return {\"name\": name, \"result\": value * 2}\n380 \n",
      "col_offset": 4,
      "end_col_offset": 50,
      "filename": "src/utils/logging_system.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'secret123'",
      "line_number": 376,
      "line_range": [
        376,
        377,
        378,
        379
      ],
      "more_info": "https://bandit.readthedocs.io/en/0.0.0/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    }
  ]
}